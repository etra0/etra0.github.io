<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>re on Sebastián Aedo&#39;s blog</title>
    
    
    
    <link>https://etra0.github.io/tags/re/</link>
    <description>Recent content in re on Sebastián Aedo&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 26 Jun 2020 15:40:55 -0400</lastBuildDate>
    
	<atom:link href="https://etra0.github.io/tags/re/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Quién necesita Matplotlib si tenemos el Administrador de Tareas</title>
      <link>https://etra0.github.io/posts/2020-06-26-taskmgr/</link>
      <pubDate>Fri, 26 Jun 2020 15:40:55 -0400</pubDate>
      
      <guid>https://etra0.github.io/posts/2020-06-26-taskmgr/</guid>
      <description>
        
          &lt;img src=&#34;https://etra0.github.io/assets/images/taskmgr/out.gif&#34;/&gt;
          
        
        
        
          El fin justifica los medios (?) Obviamente mi objetivo no era simplemente dibujar senos en el Administrador de Tareas aunque fue entretenido, si no que este fue el medio para concretar mi fin: Aprender sobre hacking interno inyectando DLLs
Hacking interno: Sharing the space Como comenté en un blog previo, el hacking externo es entre comillas &amp;ldquo;fácil de concretar&amp;rdquo;, ya que requiere mucho menos boilerplate, y la WinAPI provee las funciones necesarias para leer y modificar la memoria de un proceso externo sin mayor problemas, así que para cosas rápidas a veces es más fácil ir por este camino, pero lo que yo no sabía eran todas las ventajas que se tenían al hacer las cosas de forma interna.
          
        
        </description>
    </item>
    
    <item>
      <title>Creando mi propio Photo Mode para Yakuza Kiwami 2</title>
      <link>https://etra0.github.io/posts/2020-05-28-photo-mode/</link>
      <pubDate>Thu, 28 May 2020 14:08:01 -0400</pubDate>
      
      <guid>https://etra0.github.io/posts/2020-05-28-photo-mode/</guid>
      <description>
        
          &lt;img src=&#34;https://etra0.github.io/assets/images/photomode/kiryu.jpg&#34;/&gt;
          
        
        
        
          Resultados Para captar tu atención, acá están los resultados de un Photo Mode implementado en Rust.
Now the Freecam for K2 automatically removes the UI for a proper &amp;quot;photo mode&amp;quot;. It even removes the health of the enemies in heat actions! (Hide UI doesn&amp;#39;t remove that).
As always, you can get the latest release @ https://t.co/mLpG5p53ds pic.twitter.com/Fp1kJBnAt7
&amp;mdash; Sebastián Aedo (@etra0) May 23, 2020   Habiendo terminado el Yakuza 0 (what a great game) y el Yakuza Kiwami (not so great tbh), naturalmente, el siguiente juego era Yakuza Kiwami 2.
          
        
        </description>
    </item>
    
  </channel>
</rss>